on: [push, pull_request]

name: Continuous integration

jobs:
  check:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    if: ${{ matrix.os }} == "windows-latest"
    env:
      LLVM_SYS_140_PREFIX: "C:\\Program Files\\LLVM"
    steps:
      - uses: actions/checkout@v2
      - name: Install Pypy
        uses: actions/setup-python@v3
        with:
          python-version: "pypy-3.9"
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: clippy
      - name: Cache LLVM and Clang
        id: cache-llvm
        uses: actions/cache@v2
        with:
          path: |
            C:/Program Files/LLVM
            ./llvm
          key: llvm-14.0
      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "14.0"
          cached: ${{ steps.cache-llvm.outputs.cache-hit }}
      - uses: Swatinem/rust-cache@v1
      - name: cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
      - name: cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
      - name: cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings
      - name: test.py
        run: |
          python ./test.py -d ./tests
          python ./test.py -d ./examples
        shell: sh

  fmt:
    name: Check Formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rustfmt
      - uses: Swatinem/rust-cache@v1
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
